{"version":3,"sources":["components/Pagination/Pagination.jsx","App.js","index.js"],"names":["Pagination","state","currentPage","props","page","step","onPageChange","event","value","target","setState","handleNextStep","prevState","handlePrevStep","handleChangeQuantityPerPage","onChange","this","perPage","total","initialValues","Array","from","length","_","i","slice","aria-label","className","type","disabled","includes","onClick","map","eachPage","isActiveClass","key","classNames","Pagination__addition_extra","Component","App","onChangePerPage","quantity","ReactDOM","render","document","getElementById"],"mappings":"8PAKaA,G,MAAb,4MACEC,MAAQ,CACNC,YAAa,EAAKC,MAAMC,KACxBC,KAAM,GAHV,EAMEC,aAAe,SAACC,GAAW,IACjBC,EAAUD,EAAME,OAAhBD,MAER,EAAKE,SAAS,CAAER,aAAcM,KATlC,EAYEG,eAAiB,WACf,EAAKD,UAAS,SAAAE,GAAS,MAAK,CAC1BP,KAAMO,EAAUP,KAAO,OAd7B,EAkBEQ,eAAiB,WACf,EAAKH,UAAS,SAAAE,GAAS,MAAK,CAC1BP,KAAMO,EAAUP,KAAO,OApB7B,EAwBES,4BAA8B,SAACP,GAAW,IAChCC,EAAUD,EAAME,OAAhBD,MAER,EAAKL,MAAMY,SAASP,IA3BxB,4CA8BE,WAAU,IAAD,EACoBQ,KAAKb,MAAxBc,EADD,EACCA,QAASC,EADV,EACUA,MADV,EAEuBF,KAAKf,MAA3BC,EAFD,EAECA,YAAaG,EAFd,EAEcA,KACfc,EAAgBC,MAAMC,KAC1B,CAAEC,OAAQN,KAAKb,MAAMe,QAAS,SAACK,EAAGC,GAAJ,OAAUA,EAAI,KAI5ClB,EAIEU,KAJFV,aACAQ,EAGEE,KAHFF,4BACAH,EAEEK,KAFFL,eACAE,EACEG,KADFH,eAEIY,EAAQN,EAAcM,MAAMpB,EAAMA,EAAOY,GAE/C,OACE,oCACE,yBAAKS,aAAW,cACd,wBAAIC,UAAU,oBACZ,wBAAIA,UAAU,oBACZ,4BACEC,KAAK,SACLC,SAAUJ,EAAMK,SAAS,GACzBH,UAAU,uBACVI,QAASlB,GAJX,aASDY,EAAMO,KAAI,SAACC,GACV,IAAMC,EAAgBhC,IAAgB+B,EAClC,0BACA,KAEJ,OACE,wBAAIE,IAAKF,GACP,4BACEL,KAAK,SACLpB,MAAOyB,EACPF,QAASzB,EACTqB,UAAS,2BAAsBO,IAE9BD,OAKT,wBAAIN,UAAU,aACZ,4BACEE,SAAUJ,EAAMK,SAASZ,GACzBS,UAAU,mBACVC,KAAK,SACLG,QAASpB,GAJX,WAWN,yBAAKgB,UAAWS,IAAW,uBAAwB,CACjDC,2BAA4BnC,EAAc,KAD5C,iEAMA,4BACEa,SAAUD,EACVa,UAAU,qBACVnB,MAAOS,GAEP,4BAAQT,MAAO,GAAf,KACA,4BAAQA,MAAO,GAAf,KACA,4BAAQA,MAAO,IAAf,MACA,4BAAQA,MAAO,IAAf,YAvGV,GAAgC8B,cCDnBC,EAAb,4MACEtC,MAAQ,CACNgB,QAAS,EACTC,MAAO,GACPd,KAAM,GAJV,EAOEoC,gBAAkB,SAACC,GACjB,EAAK/B,SAAS,CACZO,SAAUwB,KAThB,4CAaE,WAAU,IAAD,EAC0BzB,KAAKf,MAA9BgB,EADD,EACCA,QAASC,EADV,EACUA,MAAOd,EADjB,EACiBA,KAChBoC,EAAoBxB,KAApBwB,gBAER,OACE,oCACE,0CACA,kBAAC,EAAD,CACEtB,MAAOA,EACPD,QAASA,EACTb,KAAMA,EACNW,SAAUyB,SAxBpB,GAAyBF,aCAzBI,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.fb0ec339.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport './Pagination.css';\n\nexport class Pagination extends Component {\n  state = {\n    currentPage: this.props.page,\n    step: 0,\n  }\n\n  onPageChange = (event) => {\n    const { value } = event.target;\n\n    this.setState({ currentPage: +value });\n  }\n\n  handleNextStep = () => {\n    this.setState(prevState => ({\n      step: prevState.step + 1,\n    }));\n  }\n\n  handlePrevStep = () => {\n    this.setState(prevState => ({\n      step: prevState.step - 1,\n    }));\n  }\n\n  handleChangeQuantityPerPage = (event) => {\n    const { value } = event.target;\n\n    this.props.onChange(value);\n  }\n\n  render() {\n    const { perPage, total } = this.props;\n    const { currentPage, step } = this.state;\n    const initialValues = Array.from(\n      { length: this.props.total }, (_, i) => i + 1,\n    );\n\n    const {\n      onPageChange,\n      handleChangeQuantityPerPage,\n      handleNextStep,\n      handlePrevStep,\n    } = this;\n    const slice = initialValues.slice(step, step + perPage);\n\n    return (\n      <>\n        <nav aria-label=\"Pagination\">\n          <ul className=\"Pagination__list\">\n            <li className=\"Pagination__item\">\n              <button\n                type=\"button\"\n                disabled={slice.includes(1)}\n                className=\"Pagination__previous\"\n                onClick={handlePrevStep}\n              >\n                Previous\n              </button>\n            </li>\n            {slice.map((eachPage) => {\n              const isActiveClass = currentPage === eachPage\n                ? 'Pagination__page_active'\n                : null;\n\n              return (\n                <li key={eachPage}>\n                  <button\n                    type=\"button\"\n                    value={eachPage}\n                    onClick={onPageChange}\n                    className={`Pagination__page ${isActiveClass}`}\n                  >\n                    {eachPage}\n                  </button>\n                </li>\n              );\n            })}\n            <li className=\"page-item\">\n              <button\n                disabled={slice.includes(total)}\n                className=\"Pagination__next\"\n                type=\"button\"\n                onClick={handleNextStep}\n              >\n                Next\n              </button>\n            </li>\n          </ul>\n        </nav>\n        <div className={classNames('Pagination__addition', {\n          Pagination__addition_extra: currentPage > 5,\n        })}\n        >\n          You have lots of opportunities to make money together with us\n        </div>\n        <select\n          onChange={handleChangeQuantityPerPage}\n          className=\"Pagination__select\"\n          value={perPage}\n        >\n          <option value={3}>3</option>\n          <option value={5}>5</option>\n          <option value={10}>10</option>\n          <option value={20}>20</option>\n        </select>\n      </>\n    );\n  }\n}\n\nPagination.propTypes = {\n  page: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  perPage: PropTypes.number.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport './App.css';\nimport { Pagination } from './components/Pagination';\n\nexport class App extends Component {\n  state = {\n    perPage: 5,\n    total: 42,\n    page: 1,\n  }\n\n  onChangePerPage = (quantity) => {\n    this.setState({\n      perPage: +quantity,\n    });\n  }\n\n  render() {\n    const { perPage, total, page } = this.state;\n    const { onChangePerPage } = this;\n\n    return (\n      <>\n        <h1>Pagination</h1>\n        <Pagination\n          total={total}\n          perPage={perPage}\n          page={page}\n          onChange={onChangePerPage}\n        />\n      </>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}