{"version":3,"sources":["components/Pagination/Pagination.jsx","App.js","index.js"],"names":["Pagination","state","currentPage","props","page","offset","data","Array","from","length","total","_","i","onPageChange","event","value","target","setState","handleStepForward","prevState","handleStepBack","handleChange","onChange","this","perPage","slice","aria-label","className","type","disabled","includes","onClick","map","eachPage","isActiveClass","key","classNames","Pagination__addition_extra","Component","App","onChangePerPage","quantity","ReactDOM","render","document","getElementById"],"mappings":"qQAKaA,G,MAAb,4MACEC,MAAQ,CACNC,YAAa,EAAKC,MAAMC,KACxBC,OAAQ,EACRC,KAAK,YAAKC,MAAMC,KAAK,CAAEC,OAAQ,EAAKN,MAAMO,QAAS,SAACC,EAAGC,GAAJ,OAAUA,EAAI,OAJrE,EAOEC,aAAe,SAACC,GAAW,IACjBC,EAAUD,EAAME,OAAhBD,MAER,EAAKE,SAAS,CAAEf,aAAca,KAVlC,EAaEG,kBAAoB,WAClB,EAAKD,UAAS,SAAAE,GAAS,MAAK,CAC1Bd,OAAQc,EAAUd,OAAS,OAfjC,EAmBEe,eAAiB,WACf,EAAKH,UAAS,SAAAE,GAAS,MAAK,CAC1Bd,OAAQc,EAAUd,OAAS,OArBjC,EAyBEgB,aAAe,SAACP,GAAW,IACjBC,EAAUD,EAAME,OAAhBD,MAER,EAAKZ,MAAMmB,SAASP,IA5BxB,4CA+BE,WAAU,IAAD,EACoBQ,KAAKpB,MAAxBqB,EADD,EACCA,QAASd,EADV,EACUA,MADV,EAE+Ba,KAAKtB,MAAnCC,EAFD,EAECA,YAAaG,EAFd,EAEcA,OAAQC,EAFtB,EAEsBA,KAG3BO,EAIEU,KAJFV,aACAQ,EAGEE,KAHFF,aACAH,EAEEK,KAFFL,kBACAE,EACEG,KADFH,eAEIK,EAAQnB,EAAKmB,MAAMpB,EAAQA,EAASmB,GAE1C,OACE,oCACE,yBAAKE,aAAW,cACd,wBAAIC,UAAU,oBACZ,wBAAIA,UAAU,oBACZ,4BACEC,KAAK,SACLC,SAAUJ,EAAMK,SAAS,GACzBH,UAAU,uBACVI,QAASX,GAJX,aASDK,EAAMO,KAAI,SAACC,GACV,IAAMC,EAAgBhC,IAAgB+B,EAClC,0BACA,KAEJ,OACE,wBAAIE,IAAKF,GACP,4BACEL,KAAK,SACLb,MAAOkB,EACPF,QAASlB,EACTc,UAAS,2BAAsBO,IAE9BD,OAKT,wBAAIN,UAAU,aACZ,4BACEE,SAAUJ,EAAMK,SAASpB,GACzBiB,UAAU,mBACVC,KAAK,SACLG,QAASb,GAJX,WAWN,yBAAKS,UAAWS,IAAW,uBAAwB,CACjDC,2BAA4BnC,EAAc,KAD5C,iEAMA,4BACEoB,SAAUD,EACVM,UAAU,qBACVZ,MAAOS,GAEP,4BAAQT,MAAO,GAAf,KACA,4BAAQA,MAAO,GAAf,KACA,4BAAQA,MAAO,IAAf,MACA,4BAAQA,MAAO,IAAf,YArGV,GAAgCuB,cCDnBC,EAAb,4MACEtC,MAAQ,CACNuB,QAAS,EACTd,MAAO,GACPN,KAAM,GAJV,EAOEoC,gBAAkB,SAACC,GACjB,EAAKxB,SAAS,CACZO,SAAUiB,KAThB,4CAaE,WAAU,IAAD,EAC0BlB,KAAKtB,MAA9BuB,EADD,EACCA,QAASd,EADV,EACUA,MAAON,EADjB,EACiBA,KAChBoC,EAAoBjB,KAApBiB,gBAER,OACE,oCACE,0CACA,kBAAC,EAAD,CACE9B,MAAOA,EACPc,QAASA,EACTpB,KAAMA,EACNkB,SAAUkB,SAxBpB,GAAyBF,aCAzBI,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.d82ce9dc.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport './Pagination.css';\n\nexport class Pagination extends Component {\n  state = {\n    currentPage: this.props.page,\n    offset: 0,\n    data: [...Array.from({ length: this.props.total }, (_, i) => i + 1)],\n  }\n\n  onPageChange = (event) => {\n    const { value } = event.target;\n\n    this.setState({ currentPage: +value });\n  }\n\n  handleStepForward = () => {\n    this.setState(prevState => ({\n      offset: prevState.offset + 1,\n    }));\n  }\n\n  handleStepBack = () => {\n    this.setState(prevState => ({\n      offset: prevState.offset - 1,\n    }));\n  }\n\n  handleChange = (event) => {\n    const { value } = event.target;\n\n    this.props.onChange(value);\n  }\n\n  render() {\n    const { perPage, total } = this.props;\n    const { currentPage, offset, data } = this.state;\n\n    const {\n      onPageChange,\n      handleChange,\n      handleStepForward,\n      handleStepBack,\n    } = this;\n    const slice = data.slice(offset, offset + perPage);\n\n    return (\n      <>\n        <nav aria-label=\"Pagination\">\n          <ul className=\"Pagination__list\">\n            <li className=\"Pagination__item\">\n              <button\n                type=\"button\"\n                disabled={slice.includes(1)}\n                className=\"Pagination__previous\"\n                onClick={handleStepBack}\n              >\n                Previous\n              </button>\n            </li>\n            {slice.map((eachPage) => {\n              const isActiveClass = currentPage === eachPage\n                ? 'Pagination__page_active'\n                : null;\n\n              return (\n                <li key={eachPage}>\n                  <button\n                    type=\"button\"\n                    value={eachPage}\n                    onClick={onPageChange}\n                    className={`Pagination__page ${isActiveClass}`}\n                  >\n                    {eachPage}\n                  </button>\n                </li>\n              );\n            })}\n            <li className=\"page-item\">\n              <button\n                disabled={slice.includes(total)}\n                className=\"Pagination__next\"\n                type=\"button\"\n                onClick={handleStepForward}\n              >\n                Next\n              </button>\n            </li>\n          </ul>\n        </nav>\n        <div className={classNames('Pagination__addition', {\n          Pagination__addition_extra: currentPage > 5,\n        })}\n        >\n          You have lots of opportunities to make money together with us\n        </div>\n        <select\n          onChange={handleChange}\n          className=\"Pagination__select\"\n          value={perPage}\n        >\n          <option value={3}>3</option>\n          <option value={5}>5</option>\n          <option value={10}>10</option>\n          <option value={20}>20</option>\n        </select>\n      </>\n    );\n  }\n}\n\nPagination.propTypes = {\n  page: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  perPage: PropTypes.number.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport './App.css';\nimport { Pagination } from './components/Pagination';\n\nexport class App extends Component {\n  state = {\n    perPage: 5,\n    total: 42,\n    page: 1,\n  }\n\n  onChangePerPage = (quantity) => {\n    this.setState({\n      perPage: +quantity,\n    });\n  }\n\n  render() {\n    const { perPage, total, page } = this.state;\n    const { onChangePerPage } = this;\n\n    return (\n      <>\n        <h1>Pagination</h1>\n        <Pagination\n          total={total}\n          perPage={perPage}\n          page={page}\n          onChange={onChangePerPage}\n        />\n      </>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}